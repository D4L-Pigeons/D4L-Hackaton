chain:
- name: "encoder"
  chain_link_spec_path: "blocks/block_stack"
  cfg:
    input_dim: 784
    output_dim: 4
    hidden_dims: [512, 100]
    ordered_module_specs:
    - {nnmodule_spec_path: "activation/relu", kwargs: {}}
    block_wrapper_name: null

- name: "posterior"
  chain_link_spec_path: "latent/posterior_gaussian"
  cfg:
    std_transform: "softplus"
    loss_coef_posterior_entropy: .001

- name: "condition_embedding"
  chain_link_spec_path: "condition_embedding/condition_embedding_transformer"
  cfg:
    embedding_dim: 64
    transformer: {encoder_kwargs: {num_layers: 2}, encoder_layer_kwargs: {nhead: 2, dim_feedforward: 128}}
    embedding_module: {n_conditions: 4, n_categories_per_condition: [10, 2, 3, 2]}

- name: "conditioned_prior"
  chain_link_spec_path: "latent/prior_vec_conditioned_logits_gaussian_mixture_nll"
  cfg:
    n_components: 64
    latent_dim: 2
    components_std: 1.
    loss_coef_prior_nll: .001

- name: "decoder"
  chain_link_spec_path: "blocks/block_stack"
  cfg:
    input_dim: 2
    output_dim: 784
    hidden_dims: [100, 512]
    ordered_module_specs:
    - {nnmodule_spec_path: "activation/relu", kwargs: {}}
    block_wrapper_name: null

- name: "reconstr_loss"
  chain_link_spec_path: "loss/reconstruction"
  cfg:
    coef: 1.
    loss_fn: {name: "mse", kwargs: {reduction: "none"}}
    tensor_reductor: {name: "mean", kwargs: {}}

- name: "output-activation"
  chain_link_spec_path: "blocks/standalone_tiny_module"
  cfg:
    nnmodule_spec_path: "activation/sigmoid"
    kwargs: {}

- name: "clone-input"
  chain_link_spec_path: "misc/cloner"
  cfg: {}

- name: "rearrange"
  chain_link_spec_path: "misc/rearranger"
  cfg: {}

- name: "repeat"
  chain_link_spec_path: "misc/repeater"
  cfg: {}

optimizers:
- {optimizer_name: "adam", kwargs: {lr: 0.001}, links: ["encoder", "decoder"], lr_scheduler: null}
- {optimizer_name: "adam", kwargs: {lr: 0.01}, links: ["condition_embedding"], lr_scheduler: {schedulers: [{name: "linear", kwargs: {total_iters: 20, start_factor: 0.05}}], out_cfg_kwargs: {interval: "epoch", frequency: 1, monitor: "val_loss", strict: True, name: null}}}
- {optimizer_name: "adam", kwargs: {lr: 0.001}, links: ["conditioned_prior"], lr_scheduler: null}

loss_manager:
  reductions:
  - {reduce_pattern: "b s -> b", reductor_name: "logsumexp", kwargs: {}}
  - {reduce_pattern: "b ->", reductor_name: "mean", kwargs: {},}

processing_commands:
- command_name: "forward"
  processing_steps:
  - {link: 'clone-input', method: 'forward', kwargs: {data_name: "img", clone_name: "img_org"}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "b 1 h w -> b (h w)"}}

  - {link: 'encoder', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'posterior', method: 'forward', kwargs: {data_name: "img", n_latent_samples: 16}}

  - {link: 'condition_embedding', method: 'forward', kwargs: {cond_ids_name: 'condition_token_ids', cat_ids_name: 'condition_values', cond_embed_name: 'cond_embed'}}

  - {link: 'conditioned_prior', method: 'forward', kwargs: {data_name: "img", logits_name: "cond_embed"}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "b s d -> (b s) d"}}

  - {link: 'decoder', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'output-activation', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "(b s) (h w) -> b s 1 h w", s: 16, h: 28, w: 28}}

  - {link: 'repeat', method: 'forward', kwargs: {data_name: "img_org", pattern: "b 1 h w -> b s 1 h w", s: 16}}

  - {link: 'reconstr_loss', method: 'forward', kwargs: {data_name: "img", target_name: "img_org", reduce_pattern: "b s 1 h w -> b s"},}

- command_name: "encode"
  processing_steps:
  - {link: 'clone-input', method: 'forward', kwargs: {data_name: "img", clone_name: "img_org"}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "b 1 h w -> b (h w)"}}

  - {link: 'encoder', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'posterior', method: 'forward', kwargs: {data_name: "img", n_latent_samples: 1}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "b 1 d -> b d"},}

- command_name: "encode-decode"
  processing_steps:
  - {link: 'clone-input', method: 'forward', kwargs: {data_name: "img", clone_name: "img_org"}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "b 1 h w -> b (h w)"}}

  - {link: 'encoder', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'posterior', method: 'forward', kwargs: {data_name: "img", n_latent_samples: 1}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "b 1 d -> b d"}}

  - {link: 'decoder', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'output-activation', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "b (h w) -> b 1 h w", h: 28, w: 28},}

- command_name: "sample-prior"
  processing_steps:

  - {link: 'condition_embedding', method: 'forward', kwargs: {cond_ids_name: 'condition_token_ids', cat_ids_name: 'condition_values', cond_embed_name: 'cond_embed'}}

  - {link: 'conditioned_prior', method: 'sample', kwargs: {n_latent_samples: 16, data_name: "img", logits_name: "cond_embed"}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "b s d -> (b s) d"}}

  - {link: 'decoder', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'output-activation', method: 'forward', kwargs: {data_name: "img"}}

  - {link: 'rearrange', method: 'forward', kwargs: {data_name: "img", pattern: "(b s) (h w) -> b s 1 h w", s: 16, h: 28, w: 28}}
